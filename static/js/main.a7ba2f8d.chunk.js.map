{"version":3,"sources":["types/Paths.ts","types/SortKey.ts","types/SortOrder.ts","api/people.ts","components/Loader/Loader.tsx","components/PersonName/index.ts","components/PersonName/PersonName.tsx","components/PersonRow/index.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/index.ts","components/PeopleTable/PeopleTable.tsx","components/NewPerson/NewPerson.tsx","components/NewPerson/index.ts","components/PeoplePage/PeoplePage.tsx","components/PeoplePage/index.ts","components/NotFoundPage/index.ts","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Paths","SortKey","SortOrder","getPeople","a","fetch","response","json","Loader","className","PersonName","name","slug","sex","useSearchParams","searchParams","href","classNames","PersonName__male","PersonName__female","PersonRow","person","personSelected","mother","father","born","died","PeopleTable","people","setSearchParams","useState","get","sortBy","setSortBy","sortOrder","setSortOrder","sortedPeople","useMemo","sort","b","Name","Sex","Asc","localeCompare","Born","Died","MotherName","FatherName","valueA","valueB","sortPeople","handleSortChange","key","set","Desc","onClick","map","MIN_YEAR","CURRENT_YEAR","Date","getFullYear","NewPerson","setPeople","redirect","setRedirect","setName","setSex","setBorn","setDied","motherName","setMotherName","fatherName","setFatherName","yearsInvalid","setYearsInvalid","mothers","filter","fathers","to","action","onSubmit","event","preventDefault","yearsLived","newPerson","toLowerCase","replace","prevPeople","find","parent","htmlFor","type","id","placeholder","value","onChange","target","required","checked","min","max","filterPeople","query","lowerQuery","includes","PeoplePage","edit","visiblePeople","setVisiblePeople","isLoading","setLoading","setQuery","appliedQuery","setAppliedQuery","useParams","form","applyQuery","useCallback","debounce","newQuery","useEffect","then","peopleFromServer","findParents","filteredPeople","NotFoundPage","App","Home","People","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7ba2f8d.chunk.js","sourcesContent":["export enum Paths {\n  Home = 'home',\n  People = 'people',\n}\n","export enum SortKey {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n  MotherName = 'motherName',\n  FatherName = 'fatherName',\n}\n","export enum SortOrder {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  try {\n    const response = await fetch(`${API_URL}`);\n\n    return await response.json();\n  } catch (error) {\n    return [];\n  }\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { PersonName } from './PersonName';\n\nexport default PersonName;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './PersonName.scss';\nimport { useSearchParams } from 'react-router-dom';\n\ntype Props = {\n  name: string,\n  slug: string,\n  sex: string,\n};\n\nexport const PersonName: React.FC<Props> = ({ name, slug, sex }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <a\n      href={`#/people/${slug}?${searchParams}`}\n      className={classNames(\n        'PersonName',\n        { PersonName__male: sex === 'm' },\n        { PersonName__female: sex === 'f' },\n      )}\n    >\n      {name}\n    </a>\n  );\n};\n","import { PersonRow } from './PersonRow';\n\nexport default PersonRow;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './PersonRow.scss';\n\nimport PersonName from '../PersonName';\n\ntype Props = {\n  person: Person,\n  personSelected: string,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person, personSelected }) => {\n  const { mother, father } = person;\n\n  return (\n    <tr className={classNames({ 'PersonRow--selected': person.slug === personSelected })}>\n      <td><PersonName name={person.name} slug={person.slug} sex={person.sex} /></td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother\n          ? <PersonName name={mother.name} slug={mother.slug} sex={mother.sex} />\n          : <b>name</b>}\n      </td>\n      <td>\n        {father\n          ? <PersonName name={father.name} slug={father.slug} sex={father.sex} />\n          : <b>name</b>}\n      </td>\n    </tr>\n  );\n};\n","import { PeopleTable } from './PeopleTable';\n\nexport default PeopleTable;\n","import React, { useMemo, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { SortKey } from '../../types/SortKey';\nimport { SortOrder } from '../../types/SortOrder';\n\nimport './PeopleTable.scss';\n\nimport PersonRow from '../PersonRow';\n\ntype Props = {\n  people: Person[],\n  personSelected: string,\n  searchParams: URLSearchParams,\n  setSearchParams: (nextParams: {}) => void,\n};\n\nconst sortPeople = (people: Person[], sortBy: string, sortOrder: string) => {\n  if (sortBy === '') {\n    return [...people];\n  }\n\n  return [...people].sort((a, b) => {\n    switch (sortBy) {\n      case SortKey.Name:\n      case SortKey.Sex:\n        return sortOrder === SortOrder.Asc\n          ? a[sortBy].localeCompare(b[sortBy])\n          : b[sortBy].localeCompare(a[sortBy]);\n\n      case SortKey.Born:\n      case SortKey.Died:\n        return sortOrder === SortOrder.Asc\n          ? a[sortBy] - b[sortBy]\n          : b[sortBy] - a[sortBy];\n\n      case SortKey.MotherName:\n      case SortKey.FatherName:\n      {\n        const valueA = a[sortBy];\n        const valueB = b[sortBy];\n\n        if (valueA === null && valueB === null) {\n          return 0;\n        }\n\n        if (valueA === null) {\n          return sortOrder === SortOrder.Asc ? 1 : -1;\n        }\n\n        if (valueB === null) {\n          return sortOrder === SortOrder.Asc ? -1 : 1;\n        }\n\n        return sortOrder === SortOrder.Asc\n          ? valueA.localeCompare(valueB)\n          : valueB.localeCompare(valueA);\n      }\n\n      default:\n        return 0;\n    }\n  });\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  personSelected,\n  searchParams,\n  setSearchParams,\n}) => {\n  const [sortBy, setSortBy] = useState(searchParams.get('sortBy') || '');\n  const [sortOrder, setSortOrder] = useState(searchParams.get('sortOrder') || '');\n\n  const sortedPeople = useMemo(\n    () => sortPeople(people, sortBy, sortOrder),\n    [sortBy, people, sortOrder],\n  );\n\n  const handleSortChange = (key: string) => {\n    if (sortBy !== key) {\n      setSortBy(key);\n      setSortOrder(SortOrder.Asc);\n      searchParams.set('sortOrder', SortOrder.Asc);\n    } else if (sortOrder === SortOrder.Desc) {\n      setSortOrder(SortOrder.Asc);\n      searchParams.set('sortOrder', SortOrder.Asc);\n    } else {\n      setSortOrder(SortOrder.Desc);\n      searchParams.set('sortOrder', SortOrder.Desc);\n    }\n\n    searchParams.set('sortBy', key);\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <table className=\"table is-bordered\">\n      <thead>\n        <tr>\n          <th\n            className={classNames(\n              'PeopleTable__header',\n              { 'PeopleTable__header--sorted': sortBy === SortKey.Name },\n              { 'PeopleTable__header--sorted-desc': sortBy === SortKey.Name && sortOrder === SortOrder.Desc },\n            )}\n            onClick={() => handleSortChange(SortKey.Name)}\n          >\n            Name\n          </th>\n          <th\n            className={classNames(\n              'PeopleTable__header',\n              { 'PeopleTable__header--sorted': sortBy === SortKey.Sex },\n              { 'PeopleTable__header--sorted-desc': sortBy === SortKey.Sex && sortOrder === SortOrder.Desc },\n            )}\n            onClick={() => handleSortChange(SortKey.Sex)}\n          >\n            Sex\n          </th>\n          <th\n            className={classNames(\n              'PeopleTable__header',\n              { 'PeopleTable__header--sorted': sortBy === SortKey.Born },\n              { 'PeopleTable__header--sorted-desc': sortBy === SortKey.Born && sortOrder === SortOrder.Desc },\n            )}\n            onClick={() => handleSortChange(SortKey.Born)}\n          >\n            Born\n          </th>\n          <th\n            className={classNames(\n              'PeopleTable__header',\n              { 'PeopleTable__header--sorted': sortBy === SortKey.Died },\n              { 'PeopleTable__header--sorted-desc': sortBy === SortKey.Died && sortOrder === SortOrder.Desc },\n            )}\n            onClick={() => handleSortChange(SortKey.Died)}\n          >\n            Died\n          </th>\n          <th\n            className={classNames(\n              'PeopleTable__header',\n              { 'PeopleTable__header--sorted': sortBy === SortKey.MotherName },\n              { 'PeopleTable__header--sorted-desc': sortBy === SortKey.MotherName && sortOrder === SortOrder.Desc },\n            )}\n            onClick={() => handleSortChange(SortKey.MotherName)}\n          >\n            Mother&apos;s name\n          </th>\n          <th\n            className={classNames(\n              'PeopleTable__header',\n              { 'PeopleTable__header--sorted': sortBy === SortKey.FatherName },\n              { 'PeopleTable__header--sorted-desc': sortBy === SortKey.FatherName && sortOrder === SortOrder.Desc },\n            )}\n            onClick={() => handleSortChange(SortKey.FatherName)}\n          >\n            Father&apos;s name\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedPeople.map(person => (\n          <PersonRow person={person} key={person.slug} personSelected={personSelected} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useMemo, useState } from 'react';\nimport { Navigate, useSearchParams } from 'react-router-dom';\n\nimport './NewPerson.scss';\n\ntype PeopleCallback = (people: Person[]) => Person[];\n\ntype Props = {\n  people: Person[],\n  setPeople: (callback: PeopleCallback) => void,\n};\n\nconst MIN_YEAR = 1400;\nconst CURRENT_YEAR = new Date().getFullYear();\n\nexport const NewPerson: React.FC<Props> = ({ people, setPeople }) => {\n  const [redirect, setRedirect] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  const [name, setName] = useState('');\n  const [sex, setSex] = useState('m');\n  const [born, setBorn] = useState(MIN_YEAR);\n  const [died, setDied] = useState(MIN_YEAR);\n  const [motherName, setMotherName] = useState('');\n  const [fatherName, setFatherName] = useState('');\n\n  const [yearsInvalid, setYearsInvalid] = useState(false);\n\n  const mothers = useMemo(() => {\n    return people.filter(person => (person.sex === 'f' && person.died >= born));\n  }, [people, born]);\n\n  const fathers = useMemo(() => {\n    return people.filter(person => (person.sex === 'm' && person.died >= born));\n  }, [people, born]);\n\n  const addPerson = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const yearsLived = died - born;\n\n    if (yearsLived < 0 || yearsLived > 150) {\n      setYearsInvalid(true);\n\n      return;\n    }\n\n    const newPerson: Person = {\n      name,\n      sex,\n      born,\n      died,\n      motherName: motherName || null,\n      fatherName: fatherName || null,\n      slug: `${name.toLowerCase().replace(' ', '-')}-${born}`,\n    };\n\n    setPeople((prevPeople) => [\n      ...prevPeople,\n      {\n        ...newPerson,\n        mother: prevPeople.find(parent => parent.name === newPerson.motherName) || null,\n        father: prevPeople.find(parent => parent.name === newPerson.fatherName) || null,\n      },\n    ]);\n    setRedirect(true);\n  };\n\n  return (\n    redirect\n      ? <Navigate to={`/people?${searchParams}`} />\n      : (\n        <form action=\"/\" className=\"NewPerson\" onSubmit={addPerson}>\n          <label htmlFor=\"name\" className=\"label\">Name:</label>\n          <input\n            type=\"text\"\n            className=\"input\"\n            id=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={event => setName(event.target.value.replace(/[^a-zA-Z ]/g, ''))}\n            required\n          />\n\n          <p className=\"label\">Sex:</p>\n          <div className=\"sex-container\">\n            <label htmlFor=\"male\" className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"male\"\n                name=\"sex\"\n                checked={sex === 'm'}\n                onChange={() => setSex('m')}\n              />\n              Male\n            </label>\n            <label htmlFor=\"female\" className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"female\"\n                name=\"sex\"\n                checked={sex === 'f'}\n                onChange={() => setSex('f')}\n              />\n              Female\n            </label>\n          </div>\n\n          <label htmlFor=\"born\" className=\"label\">Born</label>\n          <input\n            type=\"number\"\n            className={classNames('input', { 'input--invalid': yearsInvalid })}\n            min={MIN_YEAR}\n            max={CURRENT_YEAR}\n            value={born}\n            onChange={event => {\n              setYearsInvalid(false);\n              setBorn(+event.target.value);\n            }}\n          />\n\n          <label htmlFor=\"died\" className=\"label\">Died</label>\n          <input\n            type=\"number\"\n            className={classNames('input', { 'input--invalid': yearsInvalid })}\n            min={MIN_YEAR}\n            max={CURRENT_YEAR}\n            value={died}\n            onChange={event => {\n              setYearsInvalid(false);\n              setDied(+event.target.value);\n            }}\n          />\n\n          <label htmlFor=\"mother\" className=\"label\">Mother:</label>\n          <select\n            name=\"mother\"\n            id=\"mother\"\n            className=\"select\"\n            value={motherName}\n            onChange={event => setMotherName(event.target.value)}\n          >\n            <option value=\"\">Select a mother</option>\n            {mothers.map(mother => (\n              <option key={mother.slug} value={mother.name}>{mother.name}</option>\n            ))}\n          </select>\n\n          <label htmlFor=\"father\" className=\"label\">Father:</label>\n          <select\n            name=\"father\"\n            id=\"father\"\n            className=\"select\"\n            value={fatherName}\n            onChange={event => setFatherName(event.target.value)}\n          >\n            <option value=\"\">Select a father</option>\n            {fathers.map(father => (\n              <option key={father.slug} value={father.name}>{father.name}</option>\n            ))}\n          </select>\n\n          <button type=\"submit\" className=\"button\">Add person</button>\n        </form>\n      )\n  );\n};\n","import { NewPerson } from './NewPerson';\n\nexport default NewPerson;\n","import React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { debounce } from 'lodash';\nimport { getPeople } from '../../api/people';\n\nimport './PeoplePage.scss';\n\nimport { Loader } from '../Loader';\nimport PeopleTable from '../PeopleTable';\nimport NewPerson from '../NewPerson';\n\ntype Props = {\n  edit: boolean,\n};\n\nconst DEBOUNCE_DELAY = 500;\n\nconst findParents = (people: Person[]): Person[] => {\n  return people.map(person => ({\n    ...person,\n    mother: people.find(parent => parent.name === person.motherName) || null,\n    father: people.find(parent => parent.name === person.fatherName) || null,\n  }));\n};\n\nconst filterPeople = (people: Person[], query: string) => {\n  const lowerQuery = query.toLowerCase();\n\n  const filtered = people.filter(person => (\n    person.name.toLowerCase().includes(lowerQuery)\n      || person.motherName?.toLowerCase().includes(lowerQuery)\n      || person.fatherName?.toLowerCase().includes(lowerQuery)\n  ));\n\n  return filtered;\n};\n\nexport const PeoplePage: React.FC<Props> = ({ edit }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [visiblePeople, setVisiblePeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [query, setQuery] = useState(searchParams.get('query') || '');\n  const [appliedQuery, setAppliedQuery] = useState(query);\n\n  const { personSelected = '' } = useParams<{ personSelected: string }>();\n\n  const form = useMemo(() => {\n    return edit\n      ? <NewPerson people={people} setPeople={setPeople} />\n      : <a href={`#/people/new?${searchParams}`} className=\"button add-button\">Add person</a>;\n  }, [edit, searchParams]);\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      setAppliedQuery(newQuery);\n      searchParams.set('query', newQuery);\n      setSearchParams(searchParams);\n    }, DEBOUNCE_DELAY),\n    [edit, searchParams, personSelected],\n  );\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => findParents(peopleFromServer))\n      .then(peopleFromServer => {\n        const filteredPeople = filterPeople(peopleFromServer, appliedQuery);\n\n        setPeople(peopleFromServer);\n        setVisiblePeople(filteredPeople);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    const filteredPeople = filterPeople(people, appliedQuery);\n\n    setVisiblePeople(filteredPeople);\n  }, [appliedQuery, people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People table</h1>\n\n      <div className=\"container\">\n        {isLoading\n          ? <Loader />\n          : (\n            <>\n              {form}\n              <input\n                type=\"text\"\n                className=\"input\"\n                placeholder=\"Search\"\n                value={query}\n                onChange={(event) => {\n                  setQuery(event.target.value);\n                  applyQuery(event.target.value);\n                }}\n              />\n              <PeopleTable\n                people={visiblePeople}\n                personSelected={personSelected}\n                searchParams={searchParams}\n                setSearchParams={setSearchParams}\n              />\n            </>\n          )}\n      </div>\n    </>\n  );\n};\n","import { PeoplePage } from './PeoplePage';\n\nexport default PeoplePage;\n","import { NotFoundPage } from './NotFoundPage';\n\nexport default NotFoundPage;\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport {\n  Routes, Route, Link, Navigate,\n} from 'react-router-dom';\n\nimport { Paths } from './types/Paths';\n\nimport './App.scss';\n\nimport PeoplePage from './components/PeoplePage';\nimport NotFoundPage from './components/NotFoundPage';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header>\n        <nav className=\"navbar\">\n          <Link to={`/${Paths.Home}`} className=\"navbar-item\">Home</Link>\n          <Link to={`/${Paths.People}`} className=\"navbar-item\">People</Link>\n        </nav>\n      </header>\n\n      <Routes>\n        <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n        <Route path={Paths.Home} element={<Navigate to=\"/\" replace />} />\n        <Route path={`${Paths.People}/new`} element={<PeoplePage edit />} />\n        <Route path={`${Paths.People}/:personSelected`} element={<PeoplePage edit={false} />} />\n        <Route path={Paths.People} element={<PeoplePage edit={false} />} />\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}